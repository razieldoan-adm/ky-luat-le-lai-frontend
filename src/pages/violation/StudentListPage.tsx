import React, { useState, useEffect } from "react";
import {
  Button,
  MenuItem,
  Select,
  FormControl,
  InputLabel,
  Table,
  TableHead,
  TableRow,
  TableCell,
  TableBody,
  TextField,
} from "@mui/material";
import api from "../../api/api";

const StudentListPage: React.FC = () => {
  const [classOptions, setClassOptions] = useState<any[]>([]);
  const [selectedClass, setSelectedClass] = useState("");
  const [students, setStudents] = useState<any[]>([]);

  // üìå L·∫•y danh s√°ch l·ªõp
  useEffect(() => {
    const fetchClasses = async () => {
      try {
        const res = await api.get("/api/classes/with-teacher");
        setClassOptions(res.data);
      } catch (err) {
        console.error("L·ªói khi l·∫•y danh s√°ch l·ªõp:", err);
      }
    };
    fetchClasses();
  }, []);

  // üìå Load h·ªçc sinh theo l·ªõp
  const handleLoadStudents = async () => {
    if (!selectedClass) return;
    try {
      const res = await api.get("/api/students", {
        params: { className: selectedClass }, // ‚úÖ backend d√πng className
      });
      setStudents(res.data);
    } catch (err) {
      console.error("L·ªói khi l·∫•y danh s√°ch h·ªçc sinh:", err);
    }
  };

  // üìå Nh·∫≠p SƒêT cha m·∫π
  const handleInputChange = (index: number, field: string, value: string) => {
    const newStudents = [...students];
    newStudents[index] = { ...newStudents[index], [field]: value };
    setStudents(newStudents);
  };

  // üìå L∆∞u t·∫•t c·∫£ SƒêT
  const handleSaveAll = async () => {
    try {
      await api.post("/api/students/update-phones", students); // ‚úÖ g·ª≠i m·∫£ng tr·ª±c ti·∫øp
      alert("ƒê√£ l∆∞u thay ƒë·ªïi th√†nh c√¥ng!");
      handleLoadStudents();
    } catch (err) {
      console.error("L·ªói khi l∆∞u thay ƒë·ªïi:", err);
      alert("C√≥ l·ªói x·∫£y ra khi l∆∞u!");
    }
  };

  // üìå Import Excel (upload file th·∫≠t l√™n backend)
  const handleImportExcel = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (!file) return;

    const formData = new FormData();
    formData.append("file", file);

    try {
      const res = await api.post("/api/students/import", formData, {
        headers: { "Content-Type": "multipart/form-data" },
      });
      alert(`Import th√†nh c√¥ng: ${res.data.count} h·ªçc sinh`);
      handleLoadStudents(); // load l·∫°i danh s√°ch l·ªõp hi·ªán t·∫°i
    } catch (err) {
      console.error("L·ªói import:", err);
      alert("Import th·∫•t b·∫°i!");
    }
  };

  return (
    <div>
      <h2>Danh s√°ch h·ªçc sinh</h2>

      {/* Ch·ªçn l·ªõp */}
      <FormControl sx={{ minWidth: 250, mr: 2 }}>
        <InputLabel id="class-select-label">Ch·ªçn l·ªõp</InputLabel>
        <Select
          labelId="class-select-label"
          value={selectedClass}
          onChange={(e) => setSelectedClass(e.target.value)}
        >
          {classOptions.map((c) => (
            <MenuItem key={c._id} value={c.className}>
              {c.className} - GVCN: {c.teacher || "?"}
            </MenuItem>
          ))}
        </Select>
      </FormControl>

      <Button
        variant="contained"
        color="primary"
        onClick={handleLoadStudents}
        disabled={!selectedClass}
      >
        Load danh s√°ch
      </Button>

      {/* N√∫t import Excel */}
      <Button
        variant="contained"
        color="secondary"
        sx={{ ml: 2 }}
        component="label"
      >
        Import Excel
        <input
          type="file"
          hidden
          accept=".xlsx, .xls"
          onChange={handleImportExcel}
        />
      </Button>

      {/* N√∫t l∆∞u thay ƒë·ªïi */}
      <Button
        variant="outlined"
        color="success"
        sx={{ ml: 2 }}
        onClick={handleSaveAll}
        disabled={students.length === 0}
      >
        L∆∞u thay ƒë·ªïi
      </Button>

      {/* B·∫£ng danh s√°ch h·ªçc sinh */}
      <Table sx={{ mt: 3 }}>
        <TableHead>
          <TableRow>
            <TableCell>STT</TableCell>
            <TableCell>T√™n h·ªçc sinh</TableCell>
            <TableCell>L·ªõp</TableCell>
            <TableCell>SƒêT Ba</TableCell>
            <TableCell>SƒêT M·∫π</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {students.map((s, index) => (
            <TableRow key={s._id || index}>
              <TableCell>{index + 1}</TableCell>
              <TableCell>{s.name}</TableCell>
              <TableCell>{s.className}</TableCell>
              <TableCell>
                <TextField
                  variant="standard"
                  value={s.fatherPhone || ""}
                  onChange={(e) =>
                    handleInputChange(index, "fatherPhone", e.target.value)
                  }
                />
              </TableCell>
              <TableCell>
                <TextField
                  variant="standard"
                  value={s.motherPhone || ""}
                  onChange={(e) =>
                    handleInputChange(index, "motherPhone", e.target.value)
                  }
                />
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </div>
  );
};

export default StudentListPage;
